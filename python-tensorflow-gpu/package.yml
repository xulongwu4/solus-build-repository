name       : python-tensorflow-gpu
version    : 1.10.1
release    : 3
source     :
    - https://github.com/tensorflow/tensorflow/archive/v1.10.1.tar.gz : 83092d709800e2d93d4d4b1bcacaeb74f2f328962ed764cb35bbee20402879c6
license    : Apache-2.0
component  : programming
summary    : Library for computation using data flow graphs for scalable machine learning
description: |
    TensorFlow is an open source software library for numerical computation using data flow graphs.
networking : yes
patterns   :
    - ^tensorflow-gpu-c-api :
        - /usr/include
        - /usr/lib64
builddeps  :
    - pkgconfig(ompi)
    - pkgconfig(python3)
    - bazel
    - numpy
    - pip
    - python-wheel
    - g++-7
    - libgcc-7
    - libgomp-7
    - libstdc++-7
    - nvidia-glx-driver-common
    - pkgconfig(cuda)
    - cudnn-devel
    - nccl-devel
    - tensorrt-devel
rundeps    :
    - numpy
    #- python-absl-py
    - python-mock
    - python-protobuf
setup      : |
    %patch -p1 < $pkgfiles/xla.patch

    #cp -a $workdir $PKG_BUILD_DIR/py2build
    cp -a $workdir $PKG_BUILD_DIR/py3build

    export USE_DEFAULT_PYTHON_LIB_PATH=1
    export TF_NEED_JEMALLOC=1
    export TF_NEED_GCP=0
    export TF_NEED_HDFS=0
    export TF_NEED_AWS=0
    export TF_NEED_KAFKA=0
    export TF_ENABLE_XLA=1
    export TF_NEED_GDR=0
    #export TF_NEED_GDR=1 # Need librdma
    export TF_NEED_VERBS=0
    export TF_NEED_OPENCL_SYCL=0
    #export TF_NEED_COMPUTECPP=0
    
    export TF_NEED_CUDA=1
    export TF_CUDA_VERSION=10.0
    export CUDA_TOOLKIT_PATH=/usr
    export TF_CUDNN_VERSION=7.4
    export CUDNN_INSTALL_PATH=/usr
    export TF_NEED_TENSORRT=1
    export TENSORRT_INSTALL_PATH=/usr/lib64
    export TF_NCCL_VERSION=2.3
    export NCCL_INSTALL_PATH=/usr
    export TF_CUDA_COMPUTE_CAPABILITIES=6.1 # GTX 1060
    export TF_CUDA_CLANG=0
    export GCC_HOST_COMPILER_PATH=/usr/local/bin/gcc

    export TF_NEED_MPI=1
    export MPI_HOME=/usr
    export CC_OPT_FLAGS="-march=native" # "native" should not be used if pushing to Solus repo
    export TF_SET_ANDROID_WORKSPACE=0

    #pushd $PKG_BUILD_DIR/py2build
    #export PYTHON_BIN_PATH=/usr/bin/python
    #mkdir -p $PKG_BUILD_DIR/bazel-cache-py2build
    #TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py2build ./configure
    #popd

    pushd $PKG_BUILD_DIR/py3build
    export PYTHON_BIN_PATH=/usr/bin/python3
    mkdir -p $PKG_BUILD_DIR/bazel-cache-py3build
    TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py3build ./configure
    popd
build      : |
    #pushd $PKG_BUILD_DIR/py2build
    #TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py2build bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package
    #mkdir -p tmp
    #bazel-bin/tensorflow/tools/pip_package/build_pip_package tmp/tensorflow_pkg
    #popd

    pushd $PKG_BUILD_DIR/py3build
    TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py3build bazel build --config=opt --config=cuda //tensorflow:libtensorflow.so //tensorflow/tools/pip_package:build_pip_package
    mkdir -p tmp
    bazel-bin/tensorflow/tools/pip_package/build_pip_package tmp/tensorflow_pkg
    popd
install    : |
    pushd $PKG_BUILD_DIR/py3build
    WHEEL_NAME=$(basename tmp/tensorflow_pkg/tensorflow*.whl)
    pip3 install --no-deps --root=$installdir tmp/tensorflow_pkg/$WHEEL_NAME

    #tensorflow/c/generate-pc.sh --prefix=/usr --version=$version
    #install -Dm00644 tensorflow.pc $installdir/usr/lib64/pkgconfig/tensorflow.pc

    #install -Dm00755 -t $installdir/usr/lib64 bazel-bin/tensorflow/lib*.so

    #install -Dm00644 tensorflow/c/c_api.h $installdir/usr/include/tensorflow/c/c_api.h
    #install -Dm00644 tensorflow/c/c_api_experimental.h $installdir/usr/include/tensorflow/c/c_api_experimental.h
    #install -Dm00644 tensorflow/c/eager/c_api.h $installdir/usr/include/tensorflow/c/eager/c_api.h

    # Remove tensorboard
    rm -rfv $installdir/usr/bin/tensorboard

    #for _f in $installdir/usr/bin/*; do
    #mv -v "$_f" "${_f}3"
    #done

    #pushd $PKG_BUILD_DIR/py2build
    #WHEEL_NAME=$(basename tmp/tensorflow_pkg/tensorflow*.whl)
    #pip install --no-deps --root=$installdir tmp/tensorflow_pkg/$WHEEL_NAME
    #popd

    # Remove tensorboard
    #rm -rfv $installdir/usr/bin/tensorboard

    # tensorflow-gpu-c-api
    tensorflow/c/generate-pc.sh --prefix=/usr --libdir=lib64 --version=$version
    install -Dm00644 tensorflow.pc $installdir/usr/lib64/pkgconfig/tensorflow.pc
    install -Dm00755 -t $installdir/usr/lib64 bazel-bin/tensorflow/lib*.so
    install -Dm00644 tensorflow/c/c_api.h $installdir/usr/include/tensorflow/c/c_api.h
    install -Dm00644 tensorflow/c/c_api_experimental.h $installdir/usr/include/tensorflow/c/c_api_experimental.h
    install -Dm00644 tensorflow/c/eager/c_api.h $installdir/usr/include/tensorflow/c/eager/c_api.h
    popd
